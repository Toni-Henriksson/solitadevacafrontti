{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henri\\\\Desktop\\\\Projektit\\\\SolitaHaaste2022\\\\client\\\\src\\\\components\\\\modal\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState, StyleSheet, Modal, Animated } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalPopup = _ref => {\n  _s();\n\n  let {\n    visible,\n    children\n  } = _ref;\n  // Käyttöohje pop up screenille react nativella: \n  // 1. Lisää tää tiedosto projektiisi\n  // 2. Importtaa tää tiedosto haluttuun filuun, esim app.js\n  // 3. Lisää muuttuja valitsemaasi filuun: const [visible, setVisible] = useState(false);\n  // 4. Lisää <ModalPoup visible={visible}> *Tänne modalin viewit ja tekstit yms* </ModalPoup visible={visible}>\n  // 5. Sit halutussa buttonissa vaan: onPress={ () => setVisible(true)} niin modal pop up pomppaa näytölle.\n  const [showModal, setShowModal] = useState(visible);\n  const scaleValue = useRef(new Animated.Value(0)).current;\n  useEffect(() => {\n    toggleModal();\n  }, [visible]);\n\n  const toggleModal = () => {\n    if (visible) {\n      setShowModal(true);\n      Animated.spring(scaleValue, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true\n      }).start();\n    } else {\n      setTimeout(() => setShowModal(false), 200);\n      Animated.timing(scaleValue, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    transparent: true,\n    visible: showModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBackground\",\n      children: /*#__PURE__*/_jsxDEV(Animated.div, {\n        style: [{\n          transform: [{\n            scale: scaleValue\n          }]\n        }],\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalPopup, \"7pxL3KFRvNUeXJksgXn3wHxkmD4=\");\n\n_c = ModalPopup;\nexport default ModalPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPopup\");","map":{"version":3,"names":["useEffect","useRef","useState","StyleSheet","Modal","Animated","ModalPopup","visible","children","showModal","setShowModal","scaleValue","Value","current","toggleModal","spring","toValue","duration","useNativeDriver","start","setTimeout","timing","transform","scale"],"sources":["C:/Users/Henri/Desktop/Projektit/SolitaHaaste2022/client/src/components/modal/Modal.js"],"sourcesContent":["import { useEffect, useRef, useState, StyleSheet, Modal,Animated } from 'react';\r\n\r\nconst ModalPopup = ({visible, children}) => {\r\n  // Käyttöohje pop up screenille react nativella: \r\n  // 1. Lisää tää tiedosto projektiisi\r\n  // 2. Importtaa tää tiedosto haluttuun filuun, esim app.js\r\n  // 3. Lisää muuttuja valitsemaasi filuun: const [visible, setVisible] = useState(false);\r\n  // 4. Lisää <ModalPoup visible={visible}> *Tänne modalin viewit ja tekstit yms* </ModalPoup visible={visible}>\r\n  // 5. Sit halutussa buttonissa vaan: onPress={ () => setVisible(true)} niin modal pop up pomppaa näytölle.\r\n  \r\n    const [showModal, setShowModal] = useState(visible);\r\n    const scaleValue = useRef(new Animated.Value(0)).current;\r\n  \r\n    useEffect(()=> {\r\n      toggleModal();\r\n    }, [visible]);\r\n    \r\n    const toggleModal = () =>{\r\n      if(visible){\r\n        setShowModal(true);\r\n        Animated.spring(scaleValue, {\r\n          toValue: 1,\r\n          duration: 300,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      }else{\r\n        setTimeout(() => setShowModal(false), 200);\r\n        Animated.timing(scaleValue, {\r\n          toValue: 0,\r\n          duration: 300,\r\n          useNativeDriver: true,\r\n        }).start();\r\n      }\r\n    }\r\n    return( \r\n    <Modal transparent visible={showModal}>\r\n      <div className='modalBackground'>\r\n        <Animated.div \r\n          style={[{transform: [{scale: scaleValue}]}]}>\r\n          {children}\r\n        </Animated.div>\r\n      </div>\r\n    </Modal>\r\n    );\r\n  };\r\n\r\n  export default ModalPopup\r\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,UAAtC,EAAkDC,KAAlD,EAAwDC,QAAxD,QAAwE,OAAxE;;;AAEA,MAAMC,UAAU,GAAG,QAAyB;EAAA;;EAAA,IAAxB;IAACC,OAAD;IAAUC;EAAV,CAAwB;EAC1C;EACA;EACA;EACA;EACA;EACA;EAEE,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACK,OAAD,CAA1C;EACA,MAAMI,UAAU,GAAGV,MAAM,CAAC,IAAII,QAAQ,CAACO,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAjD;EAEAb,SAAS,CAAC,MAAK;IACbc,WAAW;EACZ,CAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;;EAIA,MAAMO,WAAW,GAAG,MAAK;IACvB,IAAGP,OAAH,EAAW;MACTG,YAAY,CAAC,IAAD,CAAZ;MACAL,QAAQ,CAACU,MAAT,CAAgBJ,UAAhB,EAA4B;QAC1BK,OAAO,EAAE,CADiB;QAE1BC,QAAQ,EAAE,GAFgB;QAG1BC,eAAe,EAAE;MAHS,CAA5B,EAIGC,KAJH;IAKD,CAPD,MAOK;MACHC,UAAU,CAAC,MAAMV,YAAY,CAAC,KAAD,CAAnB,EAA4B,GAA5B,CAAV;MACAL,QAAQ,CAACgB,MAAT,CAAgBV,UAAhB,EAA4B;QAC1BK,OAAO,EAAE,CADiB;QAE1BC,QAAQ,EAAE,GAFgB;QAG1BC,eAAe,EAAE;MAHS,CAA5B,EAIGC,KAJH;IAKD;EACF,CAhBD;;EAiBA,oBACA,QAAC,KAAD;IAAO,WAAW,MAAlB;IAAmB,OAAO,EAAEV,SAA5B;IAAA,uBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE,QAAC,QAAD,CAAU,GAAV;QACE,KAAK,EAAE,CAAC;UAACa,SAAS,EAAE,CAAC;YAACC,KAAK,EAAEZ;UAAR,CAAD;QAAZ,CAAD,CADT;QAAA,UAEGH;MAFH;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADA;AAUD,CA1CH;;GAAMF,U;;KAAAA,U;AA4CJ,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}