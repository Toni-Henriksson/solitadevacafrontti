{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Henri\\\\Desktop\\\\Projektit\\\\SolitaHaaste2022\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Pagination from \"./components/Pagination\";\nimport Routes from \"./components/Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [listOfRoutes, setListOfRoutes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"http://localhost:3001/getData\").then(response => {\n      setListOfRoutes(response.data);\n      setLoading(false);\n    });\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = listOfRoutes.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RoutesListWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        posts: currentPosts,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: listOfRoutes.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C7nqm0asoPz4/cmLTRHKSP1nOCc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Pagination","Routes","App","listOfRoutes","setListOfRoutes","loading","setLoading","currentPage","setCurrentPage","postsPerPage","get","then","response","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"sources":["C:/Users/Henri/Desktop/Projektit/SolitaHaaste2022/client/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport Pagination from \"./components/Pagination\";\nimport Routes from \"./components/Routes\";\n\nfunction App() {\n  const [listOfRoutes, setListOfRoutes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(4);\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"http://localhost:3001/getData\").then((response) => {\n      setListOfRoutes(response.data)\n      setLoading(false);\n    })\n  }, [])\n    // Get current posts\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = listOfRoutes.slice(indexOfFirstPost, indexOfLastPost);\n  \n    // Change page\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"App\">\n      <h1>Routes</h1>\n      <div className=\"RoutesListWrapper\">\n        <Routes posts={currentPosts} loading={loading} />\n        <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={listOfRoutes.length}\n        paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACY,YAAD,IAAiBZ,QAAQ,CAAC,CAAD,CAA/B;EAEAC,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,IAAD,CAAV;IACAP,KAAK,CAACW,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;MAC5DR,eAAe,CAACQ,QAAQ,CAACC,IAAV,CAAf;MACAP,UAAU,CAAC,KAAD,CAAV;IACD,CAHD;EAID,CANQ,EAMN,EANM,CAAT,CANa,CAaX;;EACA,MAAMQ,eAAe,GAAGP,WAAW,GAAGE,YAAtC;EACA,MAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;EACA,MAAMO,YAAY,GAAGb,YAAY,CAACc,KAAb,CAAmBF,gBAAnB,EAAqCD,eAArC,CAArB,CAhBW,CAkBX;;EACA,MAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;EAEF,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE,QAAC,MAAD;QAAQ,KAAK,EAAEH,YAAf;QAA6B,OAAO,EAAEX;MAAtC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QACA,YAAY,EAAEI,YADd;QAEA,UAAU,EAAEN,YAAY,CAACiB,MAFzB;QAGA,QAAQ,EAAEF;MAHV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAlCQhB,G;;KAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}